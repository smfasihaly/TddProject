<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tdd.expensetracker</groupId>
	<artifactId>expense-tracker-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>expense-tracker-app</name>

	<properties>
		<sonar.organization>smfasihaly</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>

		<log4j-api-version>2.13.0</log4j-api-version>
		<wait-log>ready for connections. Bind-address</wait-log>
		<docker-maven-plugin-version>0.34.1</docker-maven-plugin-version>
		<maven-surefire-report-plugin-version>3.2.5</maven-surefire-report-plugin-version>
		<!-- Dependency Properties -->
		<jcalendar-version>1.4</jcalendar-version>
		<logback-classic-version>1.2.3</logback-classic-version>
		<mysql-version>8.0.33</mysql-version>
		<mysql-testContainer-version>1.19.8</mysql-testContainer-version>
		<hibernate-core-version>5.4.15.Final</hibernate-core-version>
		<h2-version>1.4.200</h2-version>
		<junit.version>4.13</junit.version>
		<mockito.version>4.4.0</mockito.version>
		<assertj.version>3.15.0</assertj.version>
		<cucumber.version>5.5.0</cucumber.version>

		<!-- Plugin Properties -->
		<pitest-maven-version>1.5.2</pitest-maven-version>
		<maven-project-info-reports-plugin-version>3.0.0</maven-project-info-reports-plugin-version>
		<maven-site-plugin-version>3.7.1</maven-site-plugin-version>
		<maven-deploy-plugin-version>2.8.2</maven-deploy-plugin-version>
		<maven-install-plugin-version>2.5.2</maven-install-plugin-version>
		<maven-surefire-plugin-version>2.22.1</maven-surefire-plugin-version>
		<maven-compiler-plugin-version>3.8.0</maven-compiler-plugin-version>
		<maven-clean-plugin-version>3.1.0</maven-clean-plugin-version>
		<jacoco-maven-plugin-version>0.8.10</jacoco-maven-plugin-version>


		<!-- Encoding and Compiler Properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- For each rule to be ignored, add another eXX and two corresponding
		properties with eXX in the name as below -->
		<sonar.issue.ignore.multicriteria>e11,e12,e13</sonar.issue.ignore.multicriteria>

		<!-- Disable rule for "Inheritance tree of classes should not be too
		deep" -->
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			squid:MaximumInheritanceDepth
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>

		<!-- Disable rule for "Local variable and method parameter names should
		comply with a naming convention" -->
		<sonar.issue.ignore.multicriteria.e12.ruleKey>
			squid:S00117
		</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>
			**/*SwingView.java
		</sonar.issue.ignore.multicriteria.e12.resourceKey>

		<!-- Disable rule for "Tests should include assertions": SonarQube is
		not aware of AssertJ Swing -->
		<sonar.issue.ignore.multicriteria.e13.ruleKey>
			squid:S2699
		</sonar.issue.ignore.multicriteria.e13.ruleKey>
		<sonar.issue.ignore.multicriteria.e13.resourceKey>
			**/*SwingViewTest.java
		</sonar.issue.ignore.multicriteria.e13.resourceKey>

		<sonar.coverage.exclusions>
			**/model/*.*,
			**/ExpenseTrackerSwingApp.*
		</sonar.coverage.exclusions>

		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports
		</sonar.junit.reportPaths>

	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/com.toedter/jcalendar -->
		<dependency>
			<groupId>com.toedter</groupId>
			<artifactId>jcalendar</artifactId>
			<version>${jcalendar-version}</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>3.17.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j-api-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j-api-version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysql-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core-version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<version>${mysql-testContainer-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>4.0.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin-version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin-version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin-version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${maven-project-info-reports-plugin-version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/bdd/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/bdd/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.8.0.2131</version>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>unit-test</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin-version}</version>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin-version}</version>
						<configuration>
							<excludes>
								<exclude>**/app/*.*</exclude>
								<exclude>**/model/*.*</exclude>
								<exclude>**/bdd/*.*</exclude>

							</excludes>
						</configuration>
						<executions>
							<execution>
								<goals>
									<!-- binds by default to the phase
									"initialize" -->
									<goal>prepare-agent</goal>
									<!-- binds by default to the phase "verify" -->
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>PACKAGE</element>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>0.50</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven-surefire-report-plugin-version}</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>report-only</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<linkXRef>false</linkXRef>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven-site-plugin-version}</version>
						<executions>
							<execution>
								<id>site</id>
								<phase>test</phase>
								<goals>
									<goal>site</goal>
								</goals>
								<configuration>
									<!-- Disable report generation -->
									<generateReports>false</generateReports>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>${pitest-maven-version}</version>
						<executions>
							<execution>
								<id>pitest</id>
								<phase>test</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<targetClasses>
								<param>com.tdd.expensetracker.*.*</param>
							</targetClasses>
							<targetTests>
								<param>com.tdd.expensetracker.*.*</param>
							</targetTests>
							<excludedClasses>
								<param>
									com.tdd.expensetracker.repository.**</param>
								<param>
									com.tdd.expensetracker.view.swing.**</param>
								<param>
									com.tdd.expensetracker.model.**</param>
								<param>
									com.tdd.expensetracker.app.**</param>

							</excludedClasses>
							<excludedTestClasses>
								<param>
									com.tdd.expensetracker.controller.**IT</param>
								<param>
									com.tdd.expensetracker.bdd.**</param>

								<param>
									com.tdd.expensetracker.**E2E</param>
								<param>
									com.tdd.expensetracker.repository.**</param>
								<param>
									com.tdd.expensetracker.view.swing.**</param>
								<param>
									com.tdd.expensetracker.racecondition.**</param>
							</excludedTestClasses>
							<mutators>
								<mutator>DEFAULTS</mutator>
							</mutators>
							<mutationThreshold>50</mutationThreshold>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven-surefire-report-plugin-version}</version>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>failsafe-report-only</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<linkXRef>false</linkXRef>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven-site-plugin-version}</version>
						<executions>
							<execution>
								<id>surefire-report</id>
								<phase>verify</phase>
								<goals>
									<goal>site</goal>
								</goals>
								<configuration>
									<!-- Disable report generation -->
									<generateReports>false</generateReports>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-surefire-plugin-version}</version>
						<executions>
							<execution>
								<id>default-it</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<testSourceDirectory>src/it/java</testSourceDirectory>
								</configuration>
							</execution>
							<execution>
								<id>bdd-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/*IT.java</exclude>
									</excludes>
									<includes>
										<include>**/*BDD.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-maven-plugin-version}</version>
						<configuration>
							<images>
								<image>
									<name>mysql:${mysql-version}</name>
									<run>
										<ports>
											<port>3307:3306</port> <!-- Corrected
											port
									for MySQL -->
										</ports>
										<env>
											<MYSQL_ROOT_PASSWORD>test</MYSQL_ROOT_PASSWORD>

											<MYSQL_DATABASE>expense_tracker</MYSQL_DATABASE>
										</env>
										<wait>
											<log>${wait-log}</log>
											<time>30000</time> <!-- Wait up to 30
											seconds -->
										</wait>
									</run>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>start-docker-mysql</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-docker-mysql</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin-version}</version>
						<configuration>
							<excludes>
								<exclude>**/app/*.*</exclude>
								<exclude>**/model/*.*</exclude>
								<exclude>**/bdd/*.*</exclude>

							</excludes>
						</configuration>
						<executions>
							<execution>
								<goals>
									<!-- binds by default to the phase
									"initialize" -->
									<goal>prepare-agent</goal>
									<!-- binds by default to the phase "verify" -->
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>PACKAGE</element>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>0.50</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>